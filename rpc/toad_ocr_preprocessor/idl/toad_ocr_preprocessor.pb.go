// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: toad_ocr_preprocessor.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	BasicToken string `protobuf:"bytes,2,opt,name=basic_token,json=basicToken,proto3" json:"basic_token,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toad_ocr_preprocessor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toad_ocr_preprocessor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_toad_ocr_preprocessor_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *PingRequest) GetBasicToken() string {
	if x != nil {
		return x.BasicToken
	}
	return ""
}

func (x *PingRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PongReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PongReply) Reset() {
	*x = PongReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toad_ocr_preprocessor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PongReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PongReply) ProtoMessage() {}

func (x *PongReply) ProtoReflect() protoreflect.Message {
	mi := &file_toad_ocr_preprocessor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PongReply.ProtoReflect.Descriptor instead.
func (*PongReply) Descriptor() ([]byte, []int) {
	return file_toad_ocr_preprocessor_proto_rawDescGZIP(), []int{1}
}

func (x *PongReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId      string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	BasicToken string `protobuf:"bytes,2,opt,name=basic_token,json=basicToken,proto3" json:"basic_token,omitempty"`
	NetFlag    string `protobuf:"bytes,3,opt,name=net_flag,json=netFlag,proto3" json:"net_flag,omitempty"`
	Image      []byte `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *ProcessRequest) Reset() {
	*x = ProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toad_ocr_preprocessor_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessRequest) ProtoMessage() {}

func (x *ProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_toad_ocr_preprocessor_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessRequest.ProtoReflect.Descriptor instead.
func (*ProcessRequest) Descriptor() ([]byte, []int) {
	return file_toad_ocr_preprocessor_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ProcessRequest) GetBasicToken() string {
	if x != nil {
		return x.BasicToken
	}
	return ""
}

func (x *ProcessRequest) GetNetFlag() string {
	if x != nil {
		return x.NetFlag
	}
	return ""
}

func (x *ProcessRequest) GetImage() []byte {
	if x != nil {
		return x.Image
	}
	return nil
}

type ProcessReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Labels  []string `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`
}

func (x *ProcessReply) Reset() {
	*x = ProcessReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_toad_ocr_preprocessor_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessReply) ProtoMessage() {}

func (x *ProcessReply) ProtoReflect() protoreflect.Message {
	mi := &file_toad_ocr_preprocessor_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessReply.ProtoReflect.Descriptor instead.
func (*ProcessReply) Descriptor() ([]byte, []int) {
	return file_toad_ocr_preprocessor_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ProcessReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProcessReply) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_toad_ocr_preprocessor_proto protoreflect.FileDescriptor

var file_toad_ocr_preprocessor_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x74, 0x6f, 0x61, 0x64, 0x5f, 0x6f, 0x63, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x69,
	0x64, 0x6c, 0x22, 0x59, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x25, 0x0a,
	0x09, 0x50, 0x6f, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x79, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x69, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19,
	0x0a, 0x08, 0x6e, 0x65, 0x74, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6e, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22,
	0x54, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x32, 0x76, 0x0a, 0x13, 0x54, 0x6f, 0x61, 0x64, 0x4f, 0x63, 0x72,
	0x50, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x04,
	0x50, 0x69, 0x6e, 0x67, 0x12, 0x10, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x50, 0x6f, 0x6e,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x13, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x41, 0x0a,
	0x20, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x73, 0x75, 0x76, 0x76, 0x6d, 0x2e, 0x74, 0x6f, 0x61, 0x64,
	0x5f, 0x6f, 0x63, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x42, 0x18, 0x54, 0x6f, 0x61, 0x64, 0x4f, 0x63, 0x72, 0x50, 0x72, 0x65, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x01, 0x2f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_toad_ocr_preprocessor_proto_rawDescOnce sync.Once
	file_toad_ocr_preprocessor_proto_rawDescData = file_toad_ocr_preprocessor_proto_rawDesc
)

func file_toad_ocr_preprocessor_proto_rawDescGZIP() []byte {
	file_toad_ocr_preprocessor_proto_rawDescOnce.Do(func() {
		file_toad_ocr_preprocessor_proto_rawDescData = protoimpl.X.CompressGZIP(file_toad_ocr_preprocessor_proto_rawDescData)
	})
	return file_toad_ocr_preprocessor_proto_rawDescData
}

var file_toad_ocr_preprocessor_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_toad_ocr_preprocessor_proto_goTypes = []interface{}{
	(*PingRequest)(nil),    // 0: idl.PingRequest
	(*PongReply)(nil),      // 1: idl.PongReply
	(*ProcessRequest)(nil), // 2: idl.ProcessRequest
	(*ProcessReply)(nil),   // 3: idl.ProcessReply
}
var file_toad_ocr_preprocessor_proto_depIdxs = []int32{
	0, // 0: idl.ToadOcrPreprocessor.Ping:input_type -> idl.PingRequest
	2, // 1: idl.ToadOcrPreprocessor.Process:input_type -> idl.ProcessRequest
	1, // 2: idl.ToadOcrPreprocessor.Ping:output_type -> idl.PongReply
	3, // 3: idl.ToadOcrPreprocessor.Process:output_type -> idl.ProcessReply
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_toad_ocr_preprocessor_proto_init() }
func file_toad_ocr_preprocessor_proto_init() {
	if File_toad_ocr_preprocessor_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_toad_ocr_preprocessor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toad_ocr_preprocessor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PongReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toad_ocr_preprocessor_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_toad_ocr_preprocessor_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_toad_ocr_preprocessor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_toad_ocr_preprocessor_proto_goTypes,
		DependencyIndexes: file_toad_ocr_preprocessor_proto_depIdxs,
		MessageInfos:      file_toad_ocr_preprocessor_proto_msgTypes,
	}.Build()
	File_toad_ocr_preprocessor_proto = out.File
	file_toad_ocr_preprocessor_proto_rawDesc = nil
	file_toad_ocr_preprocessor_proto_goTypes = nil
	file_toad_ocr_preprocessor_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ToadOcrPreprocessorClient is the client API for ToadOcrPreprocessor service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ToadOcrPreprocessorClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PongReply, error)
	Process(ctx context.Context, in *ProcessRequest, opts ...grpc.CallOption) (*ProcessReply, error)
}

type toadOcrPreprocessorClient struct {
	cc grpc.ClientConn
}

func NewToadOcrPreprocessorClient(cc grpc.ClientConn) ToadOcrPreprocessorClient {
	return &toadOcrPreprocessorClient{cc}
}

func (c *toadOcrPreprocessorClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PongReply, error) {
	out := new(PongReply)
	err := c.cc.Invoke(ctx, "/idl.ToadOcrPreprocessor/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *toadOcrPreprocessorClient) Process(ctx context.Context, in *ProcessRequest, opts ...grpc.CallOption) (*ProcessReply, error) {
	out := new(ProcessReply)
	err := c.cc.Invoke(ctx, "/idl.ToadOcrPreprocessor/Process", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ToadOcrPreprocessorServer is the server API for ToadOcrPreprocessor service.
type ToadOcrPreprocessorServer interface {
	Ping(context.Context, *PingRequest) (*PongReply, error)
	Process(context.Context, *ProcessRequest) (*ProcessReply, error)
}

// UnimplementedToadOcrPreprocessorServer can be embedded to have forward compatible implementations.
type UnimplementedToadOcrPreprocessorServer struct {
}

func (*UnimplementedToadOcrPreprocessorServer) Ping(context.Context, *PingRequest) (*PongReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedToadOcrPreprocessorServer) Process(context.Context, *ProcessRequest) (*ProcessReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Process not implemented")
}

func RegisterToadOcrPreprocessorServer(s *grpc.Server, srv ToadOcrPreprocessorServer) {
	s.RegisterService(&_ToadOcrPreprocessor_serviceDesc, srv)
}

func _ToadOcrPreprocessor_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToadOcrPreprocessorServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.ToadOcrPreprocessor/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToadOcrPreprocessorServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ToadOcrPreprocessor_Process_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ToadOcrPreprocessorServer).Process(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idl.ToadOcrPreprocessor/Process",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ToadOcrPreprocessorServer).Process(ctx, req.(*ProcessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ToadOcrPreprocessor_serviceDesc = grpc.ServiceDesc{
	ServiceName: "idl.ToadOcrPreprocessor",
	HandlerType: (*ToadOcrPreprocessorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _ToadOcrPreprocessor_Ping_Handler,
		},
		{
			MethodName: "Process",
			Handler:    _ToadOcrPreprocessor_Process_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "toad_ocr_preprocessor.proto",
}
